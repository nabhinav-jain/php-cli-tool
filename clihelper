#!/usr/bin/env php
<?php
unset($argv[0]);
// list of commands to replace with input will put in seperate file
$lists = [
  "list"       => "ls",
  "cd"         => "cd",
  "present_directory" => "pwd",
  "copy"       => "cp",
  "move"       => "mv",
  "delete"     => "rm",
  "remove"     => "rm",
  "make_directory"   => "mkdir",
  "remove_directory" => "rmdir",
  "create_file"      => "touch",
  "update_timestamp"      => "touch",
  "show"        => "cat",
  "head"       => "head",
  "tail"       => "tail",
  "find"       => "find",
  "search"       => "grep",
  "echo"       => "echo",
  "chmod"      => "chmod",
  "chown"      => "chown",
  "df"         => "df",
  "du"         => "du",
  "ps"         => "ps",
  "kill"       => "kill",
  "top"        => "top",
  "whoami"     => "whoami",
  "ifconfig"   => "ifconfig",
  "df"         => "df",
];

$flags = [];
for ($i = 2; $i < $argc; $i++) {
  if (isset($argv[$i]) && ($argv[$i][0]=="-" ||$argv[$i][0]=="--") ) {
    $flags[] = $argv[$i];
    unset($argv[$i]);
  }
}

$flags = implode(" ", $flags);
$pattern ='';
$paths = '';
//this if change happen before giving short command to argv
if ($argv[1] === 'delete' && is_dir($argv[2])) {
 $argv[1] = "rmdir";
} else {
  $argv[1] = $lists[$argv[1]];
}
 
 if($argv[1]=="grep"){
    $patternFlag = false;
    for($i = 2; $i< $argc ; $i++){
       if(isset($argv[$i]) && $patternFlag==false ) {
        $patternFlag=true;
        $pattern = $argv[$i];
        
        
       }
        else if(isset($argv[$i]) &&$patternFlag==true && $argv[$i]!='in'){
         $paths .= " ".$argv[$i];
         
       }
    }
} 



if ($argv[1] === "mv" || $argv[1] === "cp") {
  foreach ($argv as $key => $value) {
    if (strtolower($value) === "to") {
      unset($argv[$key]);
    }
  }
}

$command = $argv[1];



$output = shell_exec($command . " " . $flags." ".$pattern." ".$paths);
echo $output;
